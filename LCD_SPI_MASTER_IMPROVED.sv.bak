module LCD_SPI_MASTER_IMPROVED (
	i_en,
	i_cdr, // 2 bits, command/data and send/send+receive.
	i_clk,
	i_data,
	
	o_busy,
	
	o_cs,
	o_dcrs,
	o_sdi,
	o_sck
);

input i_en;
input [1:0] i_cdr;
input i_clk;
input [7:0] i_data;

output reg o_busy;
output reg o_cs;
output reg o_dcrs;
output reg o_sdi;
output wire o_sck;

reg [7:0] internal_data;
wire [0:7] reversed_data = internal_data[7:0];
reg [0:2] data_counter;

reg internal_sck;

initial internal_sck <= 1'b1;
initial o_busy <= 1'b0;
initial o_cs <= 1'b1;
initial data_counter <= 3'b0;

assign o_sck = internal_sck & ~o_cs;

always @ (posedge i_clk) begin
	if (i_en) begin
		internal_data <= i_data;
		o_busy <= 1'b1;
	end
	
	if (o_busy) begin
		internal_sck <= !internal_sck;
		
		if (internal_sck) begin
			o_dcrs <= i_cdr[1];
			o_sdi <= reversed_data[data_counter];
			o_cs <= 1'b0;
			data_counter <= data_counter + 1'b1;
			o_busy <= ~&data_counter;
		end
	end
	else begin
		internal_sck <= 1'b1;
		if (internal_sck) o_cs <= 1'b1;
	end
end

endmodule
